{"ast":null,"code":"import _slicedToArray from \"/Users/ronnamaefirmo/Downloads/projects/caldura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ronnamaefirmo/Downloads/projects/caldura/src/App.tsx\";\nimport * as React from 'react';\nimport { StyleSheet, css } from 'aphrodite';\n\nconst App = () => {\n  const initialInput = {\n    value: '',\n    error: ''\n  };\n\n  const _React$useState = React.useState([initialInput]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        inputs = _React$useState2[0],\n        setInputs = _React$useState2[1];\n\n  const _React$useState3 = React.useState(0),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        result = _React$useState4[0],\n        setResult = _React$useState4[1];\n\n  const addInput = () => {\n    setInputs([...inputs, initialInput]);\n  };\n\n  const handleInput = (index, value) => {\n    let newInputs = [...inputs];\n    newInputs[index].value = value;\n    setInputs(newInputs);\n  };\n\n  const removeInput = index => {\n    if (inputs.length > 1) {\n      let newInputs = [...inputs];\n      newInputs.splice(index, 1);\n      setInputs(newInputs);\n    }\n  };\n\n  const validateInput = (index, value) => {\n    let newInputs = [...inputs];\n    const durationRegex = /^\\d{2}:\\d{2}(:\\d{2})?$/;\n\n    if (!durationRegex.test(value)) {\n      newInputs[index].error = '⚠️ Invalid format!';\n    } else {\n      newInputs[index].error = '';\n    }\n\n    setInputs(newInputs);\n  };\n\n  const calculate = () => {\n    let totalHours = 0;\n\n    for (let i = 0; i < inputs.length; i++) {\n      const element = inputs[i].value;\n      const splits = element.split(':');\n      const hours = parseFloat(splits[0]);\n      const mins = parseFloat(splits[1]) / 60;\n      const secs = parseFloat(splits[1]) / 3600;\n      totalHours += hours + mins + secs;\n    }\n\n    setResult(totalHours);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 16,\n      fontFamily: 'sans-serif'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Calculate Duration\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 60,\n      height: 5,\n      borderRadius: 5,\n      background: 'lightblue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 24,\n      width: 420\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Input a time duration in string to get started\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Add field\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, inputs.map((el, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: \"inputs\".concat(i),\n      style: {\n        margin: '14px 0',\n        height: 24\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        height: 'inherit',\n        marginRight: 6\n      },\n      value: el.value,\n      onBlur: e => validateInput(i, e.target.value),\n      onChange: e => handleInput(i, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        height: 30\n      },\n      onClick: () => removeInput(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, \"x\"), el.error && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: 16,\n        fontSize: 14,\n        color: '#EF5D7B'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, el.error));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      alignContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: css(styles.calculateButton),\n    onClick: calculate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Calculate!\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, result.toFixed(2)))));\n};\n\nconst styles = StyleSheet.create({\n  calculateButton: {\n    marginTop: 12,\n    padding: '12px 18px',\n    border: 0,\n    borderRadius: 2,\n    boxShadow: '0 4px 0 0 #C9C9C9',\n    outline: 'none',\n    ':hover': {\n      background: '#EBEBEB'\n    },\n    ':active': {\n      background: '#E4E4E4',\n      boxShadow: '0 2px 0 0 #C9C9C9',\n      transform: 'translate(0, 2px)'\n    }\n  }\n});\nexport default App;","map":{"version":3,"sources":["/Users/ronnamaefirmo/Downloads/projects/caldura/src/App.tsx"],"names":["React","StyleSheet","css","App","initialInput","value","error","useState","inputs","setInputs","result","setResult","addInput","handleInput","index","newInputs","removeInput","length","splice","validateInput","durationRegex","test","calculate","totalHours","i","element","splits","split","hours","parseFloat","mins","secs","margin","fontFamily","width","height","borderRadius","background","marginTop","display","justifyContent","alignItems","map","el","marginRight","e","target","marginLeft","fontSize","color","alignContent","styles","calculateButton","toFixed","create","padding","border","boxShadow","outline","transform"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,GAArB,QAAgC,WAAhC;;AAQA,MAAMC,GAAoB,GAAG,MAAM;AACjC,QAAMC,YAA8B,GAAG;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAvC;;AADiC,0BAGLN,KAAK,CAACO,QAAN,CAAmC,CAACH,YAAD,CAAnC,CAHK;AAAA;AAAA,QAG1BI,MAH0B;AAAA,QAGlBC,SAHkB;;AAAA,2BAILT,KAAK,CAACO,QAAN,CAAuB,CAAvB,CAJK;AAAA;AAAA,QAI1BG,MAJ0B;AAAA,QAIlBC,SAJkB;;AAMjC,QAAMC,QAAQ,GAAG,MAAY;AAC3BH,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYJ,YAAZ,CAAD,CAAT;AACD,GAFD;;AAIA,QAAMS,WAAW,GAAG,CAACC,KAAD,EAAgBT,KAAhB,KAAwC;AAC1D,QAAIU,SAAS,GAAG,CAAC,GAAGP,MAAJ,CAAhB;AACAO,IAAAA,SAAS,CAACD,KAAD,CAAT,CAAiBT,KAAjB,GAAyBA,KAAzB;AACAI,IAAAA,SAAS,CAACM,SAAD,CAAT;AACD,GAJD;;AAMA,QAAMC,WAAW,GAAIF,KAAD,IAAyB;AAC3C,QAAIN,MAAM,CAACS,MAAP,GAAgB,CAApB,EAAuB;AACrB,UAAIF,SAAS,GAAG,CAAC,GAAGP,MAAJ,CAAhB;AACAO,MAAAA,SAAS,CAACG,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB;AACAL,MAAAA,SAAS,CAACM,SAAD,CAAT;AACD;AACF,GAND;;AAQA,QAAMI,aAAa,GAAG,CAACL,KAAD,EAAgBT,KAAhB,KAAwC;AAC5D,QAAIU,SAAS,GAAG,CAAC,GAAGP,MAAJ,CAAhB;AAEA,UAAMY,aAAa,GAAG,wBAAtB;;AACA,QAAI,CAACA,aAAa,CAACC,IAAd,CAAmBhB,KAAnB,CAAL,EAAgC;AAC9BU,MAAAA,SAAS,CAACD,KAAD,CAAT,CAAiBR,KAAjB,GAAyB,oBAAzB;AACD,KAFD,MAEO;AACLS,MAAAA,SAAS,CAACD,KAAD,CAAT,CAAiBR,KAAjB,GAAyB,EAAzB;AACD;;AACDG,IAAAA,SAAS,CAACM,SAAD,CAAT;AACD,GAVD;;AAYA,QAAMO,SAAS,GAAG,MAAY;AAC5B,QAAIC,UAAU,GAAG,CAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,MAAM,CAACS,MAA3B,EAAmCO,CAAC,EAApC,EAAwC;AACtC,YAAMC,OAAO,GAAGjB,MAAM,CAACgB,CAAD,CAAN,CAAUnB,KAA1B;AACA,YAAMqB,MAAM,GAAGD,OAAO,CAACE,KAAR,CAAc,GAAd,CAAf;AACA,YAAMC,KAAK,GAAGC,UAAU,CAACH,MAAM,CAAC,CAAD,CAAP,CAAxB;AACA,YAAMI,IAAI,GAAGD,UAAU,CAACH,MAAM,CAAC,CAAD,CAAP,CAAV,GAAwB,EAArC;AACA,YAAMK,IAAI,GAAGF,UAAU,CAACH,MAAM,CAAC,CAAD,CAAP,CAAV,GAAwB,IAArC;AACAH,MAAAA,UAAU,IAAIK,KAAK,GAAGE,IAAR,GAAeC,IAA7B;AACD;;AAEDpB,IAAAA,SAAS,CAACY,UAAD,CAAT;AACD,GAZD;;AAcA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,UAAU,EAAE;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,MAAM,EAAE,CAFH;AAGLC,MAAAA,YAAY,EAAE,CAHT;AAILC,MAAAA,UAAU,EAAE;AAJP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAcE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,EAAb;AAAiBJ,MAAAA,KAAK,EAAE;AAAxB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,eAFX;AAGLC,MAAAA,UAAU,EAAE;AAHP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDANF,eAOE;AAAQ,IAAA,OAAO,EAAE7B,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CADF,eAYE;AAAK,IAAA,KAAK,EAAE;AAAE0B,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG9B,MAAM,CAACkC,GAAP,CAAW,CAACC,EAAD,EAAKnB,CAAL,KAAW;AACrB,wBACE;AAAK,MAAA,GAAG,kBAAWA,CAAX,CAAR;AAAwB,MAAA,KAAK,EAAE;AAAEQ,QAAAA,MAAM,EAAE,QAAV;AAAoBG,QAAAA,MAAM,EAAE;AAA5B,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE,SAAV;AAAqBS,QAAAA,WAAW,EAAE;AAAlC,OAFT;AAGE,MAAA,KAAK,EAAED,EAAE,CAACtC,KAHZ;AAIE,MAAA,MAAM,EAAEwC,CAAC,IAAI1B,aAAa,CAACK,CAAD,EAAIqB,CAAC,CAACC,MAAF,CAASzC,KAAb,CAJ5B;AAKE,MAAA,QAAQ,EAAEwC,CAAC,IAAIhC,WAAW,CAACW,CAAD,EAAIqB,CAAC,CAACC,MAAF,CAASzC,KAAb,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAQ,MAAA,KAAK,EAAE;AAAE8B,QAAAA,MAAM,EAAE;AAAV,OAAf;AAA+B,MAAA,OAAO,EAAE,MAAMnB,WAAW,CAACQ,CAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,EAWGmB,EAAE,CAACrC,KAAH,iBACC;AAAM,MAAA,KAAK,EAAE;AAAEyC,QAAAA,UAAU,EAAE,EAAd;AAAkBC,QAAAA,QAAQ,EAAE,EAA5B;AAAgCC,QAAAA,KAAK,EAAE;AAAvC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACPN,EAAE,CAACrC,KADI,CAZJ,CADF;AAmBD,GApBA,CADH,CAZF,eAoCE;AAAK,IAAA,KAAK,EAAE;AAAEiC,MAAAA,OAAO,EAAE,MAAX;AAAmBE,MAAAA,UAAU,EAAE,QAA/B;AAAyCS,MAAAA,YAAY,EAAE;AAAvD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAEhD,GAAG,CAACiD,MAAM,CAACC,eAAR,CAAtB;AAAgD,IAAA,OAAO,EAAE9B,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMZ,MAAM,CAAC2C,OAAP,CAAe,CAAf,CAAN,CAFF,CApCF,CAdF,CADF;AA0DD,CA5GD;;AA8GA,MAAMF,MAAM,GAAGlD,UAAU,CAACqD,MAAX,CAAkB;AAC/BF,EAAAA,eAAe,EAAE;AACfd,IAAAA,SAAS,EAAE,EADI;AAEfiB,IAAAA,OAAO,EAAE,WAFM;AAGfC,IAAAA,MAAM,EAAE,CAHO;AAIfpB,IAAAA,YAAY,EAAE,CAJC;AAKfqB,IAAAA,SAAS,EAAE,mBALI;AAMfC,IAAAA,OAAO,EAAE,MANM;AAOf,cAAU;AACRrB,MAAAA,UAAU,EAAE;AADJ,KAPK;AAUf,eAAW;AACTA,MAAAA,UAAU,EAAE,SADH;AAEToB,MAAAA,SAAS,EAAE,mBAFF;AAGTE,MAAAA,SAAS,EAAE;AAHF;AAVI;AADc,CAAlB,CAAf;AAmBA,eAAexD,GAAf","sourcesContent":["import * as React from 'react'\nimport { StyleSheet, css } from 'aphrodite'\n\ntype Props = {}\ntype SingleInputState = {\n  value: string\n  error: string\n}\n\nconst App: React.FC<Props> = () => {\n  const initialInput: SingleInputState = { value: '', error: '' }\n\n  const [inputs, setInputs] = React.useState<SingleInputState[]>([initialInput])\n  const [result, setResult] = React.useState<number>(0)\n\n  const addInput = (): void => {\n    setInputs([...inputs, initialInput])\n  }\n\n  const handleInput = (index: number, value: string): void => {\n    let newInputs = [...inputs]\n    newInputs[index].value = value\n    setInputs(newInputs)\n  }\n\n  const removeInput = (index: number): void => {\n    if (inputs.length > 1) {\n      let newInputs = [...inputs]\n      newInputs.splice(index, 1)\n      setInputs(newInputs)\n    }\n  }\n\n  const validateInput = (index: number, value: string): void => {\n    let newInputs = [...inputs]\n\n    const durationRegex = /^\\d{2}:\\d{2}(:\\d{2})?$/\n    if (!durationRegex.test(value)) {\n      newInputs[index].error = '⚠️ Invalid format!'\n    } else {\n      newInputs[index].error = ''\n    }\n    setInputs(newInputs)\n  }\n\n  const calculate = (): void => {\n    let totalHours = 0\n    for (let i = 0; i < inputs.length; i++) {\n      const element = inputs[i].value\n      const splits = element.split(':')\n      const hours = parseFloat(splits[0])\n      const mins = parseFloat(splits[1]) / 60\n      const secs = parseFloat(splits[1]) / 3600\n      totalHours += hours + mins + secs\n    }\n\n    setResult(totalHours)\n  }\n\n  return (\n    <div style={{ margin: 16, fontFamily: 'sans-serif' }}>\n      <h1>Calculate Duration</h1>\n\n      {/* horizontal break */}\n      <div\n        style={{\n          width: 60,\n          height: 5,\n          borderRadius: 5,\n          background: 'lightblue'\n        }}\n      />\n\n      {/* input list */}\n      <div style={{ marginTop: 24, width: 420 }}>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          }}>\n          <div>Input a time duration in string to get started</div>\n          <button onClick={addInput}>Add field</button>\n        </div>\n\n        {/* inputs */}\n        <div style={{ marginTop: 16 }}>\n          {inputs.map((el, i) => {\n            return (\n              <div key={`inputs${i}`} style={{ margin: '14px 0', height: 24 }}>\n                <input\n                  type=\"text\"\n                  style={{ height: 'inherit', marginRight: 6 }}\n                  value={el.value}\n                  onBlur={e => validateInput(i, e.target.value)}\n                  onChange={e => handleInput(i, e.target.value)}\n                />\n                <button style={{ height: 30 }} onClick={() => removeInput(i)}>\n                  x\n                </button>\n                {el.error && (\n                  <span style={{ marginLeft: 16, fontSize: 14, color: '#EF5D7B' }}>\n\t\t\t\t\t\t\t\t\t\t{el.error}\n\t\t\t\t\t\t\t\t\t</span>\n                )}\n              </div>\n            )\n          })}\n        </div>\n\n        <div style={{ display: 'flex', alignItems: 'center', alignContent: 'center' }}>\n          <button className={css(styles.calculateButton)} onClick={calculate}>Calculate!</button>\n          <div>{result.toFixed(2)}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst styles = StyleSheet.create({\n  calculateButton: {\n    marginTop: 12,\n    padding: '12px 18px',\n    border: 0,\n    borderRadius: 2,\n    boxShadow: '0 4px 0 0 #C9C9C9',\n    outline: 'none',\n    ':hover': {\n      background: '#EBEBEB'\n    },\n    ':active': {\n      background: '#E4E4E4',\n      boxShadow: '0 2px 0 0 #C9C9C9',\n      transform: 'translate(0, 2px)'\n    }\n  }\n})\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}